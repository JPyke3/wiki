{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Welcome to the t2linux wiki! This wiki contains knowledge about running Linux on Macs with the T2 chip. A list of those devices can be found on Apple's website . Notable Resources In general you can find most of the people involved on the Linux on T2 Macs (2018+) Discord Server , making it probably the most helpful and important resource of all. Distributions Different distributions are maintained by different people in their own repositories. Ubuntu https://github.com/marcosfad/mbp-ubuntu Fedora https://github.com/mikeeq/mbp-fedora Arch https://github.com/aunali1/linux-mbp-arch Manjaro https://github.com/JPyke3/mbp-manjaro Kernel Modules Support for hardware is cross distro besides patches to the distribution specific kernel. The following repos contain kernel modules for said support. MacBook Bridge / T2 Linux Driver https://github.com/t2linux/apple-bce-drv Touchbar and Ambient Light https://github.com/t2linux/apple-ib-drv Guides and similar Note that if you are using one of the distributions listed above you should follow their install guides rather than the ones listed under this section. However they might still be important to gain a better general picture or to help with specific issues. State of Linux on the MacBook Pro https://github.com/Dunedan/mbp-2016-linux Pulseaudio config files for 16,1 Models https://gist.github.com/kevineinarsson/8e5e92664f97508277fefef1b8015fba Using Luks with the intergrated keyboard https://github.com/DimitriDokuchaev/GrubLuksUnlock Fan control deamon setup https://github.com/networkException/mbpfan Outdated Arch on 2018 MacBook Pro https://gist.github.com/TRPB/437f663b545d23cc8a2073253c774be3 Ubuntu on 2016 MacBook Pro https://gist.github.com/gbrow004/096f845c8fe8d03ef9009fbb87b781a4 Notable Contributors aunali1 (Arch Linux and Kernel Module work) https://github.com/aunali1 MCMrARM (MacBook Bridge / T2 Linux Driver) https://github.com/MCMrARM roadrunner2 (Touchbar and Ambient Light Driver) https://github.com/roadrunner2 mikeeq (Fedora) https://github.com/mikeeq marcosfad (Ubuntu) https://github.com/marcosfad JPyke3 (Manjaro) https://github.com/JPyke3 ... and many more","title":"Home"},{"location":"#introduction","text":"Welcome to the t2linux wiki! This wiki contains knowledge about running Linux on Macs with the T2 chip. A list of those devices can be found on Apple's website .","title":"Introduction"},{"location":"#notable-resources","text":"In general you can find most of the people involved on the Linux on T2 Macs (2018+) Discord Server , making it probably the most helpful and important resource of all.","title":"Notable Resources"},{"location":"#distributions","text":"Different distributions are maintained by different people in their own repositories. Ubuntu https://github.com/marcosfad/mbp-ubuntu Fedora https://github.com/mikeeq/mbp-fedora Arch https://github.com/aunali1/linux-mbp-arch Manjaro https://github.com/JPyke3/mbp-manjaro","title":"Distributions"},{"location":"#kernel-modules","text":"Support for hardware is cross distro besides patches to the distribution specific kernel. The following repos contain kernel modules for said support. MacBook Bridge / T2 Linux Driver https://github.com/t2linux/apple-bce-drv Touchbar and Ambient Light https://github.com/t2linux/apple-ib-drv","title":"Kernel Modules"},{"location":"#guides-and-similar","text":"Note that if you are using one of the distributions listed above you should follow their install guides rather than the ones listed under this section. However they might still be important to gain a better general picture or to help with specific issues. State of Linux on the MacBook Pro https://github.com/Dunedan/mbp-2016-linux Pulseaudio config files for 16,1 Models https://gist.github.com/kevineinarsson/8e5e92664f97508277fefef1b8015fba Using Luks with the intergrated keyboard https://github.com/DimitriDokuchaev/GrubLuksUnlock Fan control deamon setup https://github.com/networkException/mbpfan Outdated Arch on 2018 MacBook Pro https://gist.github.com/TRPB/437f663b545d23cc8a2073253c774be3 Ubuntu on 2016 MacBook Pro https://gist.github.com/gbrow004/096f845c8fe8d03ef9009fbb87b781a4","title":"Guides and similar"},{"location":"#notable-contributors","text":"aunali1 (Arch Linux and Kernel Module work) https://github.com/aunali1 MCMrARM (MacBook Bridge / T2 Linux Driver) https://github.com/MCMrARM roadrunner2 (Touchbar and Ambient Light Driver) https://github.com/roadrunner2 mikeeq (Fedora) https://github.com/mikeeq marcosfad (Ubuntu) https://github.com/marcosfad JPyke3 (Manjaro) https://github.com/JPyke3 ... and many more","title":"Notable Contributors"},{"location":"state/","text":"Introduction While Linux is usable on all T2 models, some features are limited by lack of drivers or similar. This page should give a general overview of what is working and what is not. Working Interal Drive / SSD: Support for the SSD has been upstreamed to the Linux Kernel Screen USB Keyboard Partially Working Trackpad: While technically working, it is far from the experience on macOS Touchbar: There is support for the so called simple mode, the same that you would see on Bootcamp Windows for example. Either kunction keys from 1 to 12 or basic media / brightness control are shown. Audio: With proper configuration audio can work, however it is not stable in some situations and switching speakers and the headphone jack only works manually Wifi: Only works on Models that shipped with macOS Mojave installed as that was the last version to ship with a standard format for firmware binaries Not working TouchID Other File Systems: Linux can't mount APFS partitions nor can macOS mount ext4.","title":"Device Support and State of Features"},{"location":"state/#introduction","text":"While Linux is usable on all T2 models, some features are limited by lack of drivers or similar. This page should give a general overview of what is working and what is not.","title":"Introduction"},{"location":"state/#working","text":"Interal Drive / SSD: Support for the SSD has been upstreamed to the Linux Kernel Screen USB Keyboard","title":"Working"},{"location":"state/#partially-working","text":"Trackpad: While technically working, it is far from the experience on macOS Touchbar: There is support for the so called simple mode, the same that you would see on Bootcamp Windows for example. Either kunction keys from 1 to 12 or basic media / brightness control are shown. Audio: With proper configuration audio can work, however it is not stable in some situations and switching speakers and the headphone jack only works manually Wifi: Only works on Models that shipped with macOS Mojave installed as that was the last version to ship with a standard format for firmware binaries","title":"Partially Working"},{"location":"state/#not-working","text":"TouchID","title":"Not working"},{"location":"state/#other","text":"File Systems: Linux can't mount APFS partitions nor can macOS mount ext4.","title":"Other"},{"location":"distributions/manjaro/home/","text":"","title":"Home"},{"location":"guides/wifi/","text":"Introduction This page is a step by step guide to get wifi working on supported models. Note that currently only Macs that came with macOS Mojave preinstalled are supported, see Device Support and State of Features . On macOS Run both ioreg -l | grep RequestedFiles and system_profiler SPHardwareDataType | grep \"Model Identifier\" in a terminal and note down the output. On Linux Look at the ouput of the first command listed above, it will probably look something like this \"RequestedFiles\" = ( { \"Firmware\" = \"C-4364s-B2/kauai.trx\" , \"TxCap\" = \"C-4364s-B2/kauai-X3.txcb\" , \"Regulatory\" = \"C-4364s-B2/kauai-X3.clmb\" , \"NVRAM\" = \"C-4364s-B2/P-kauai-X3_M-HRPN_V-u__m-7.5.txt\" } ) Navigate to https://packages.aunali1.com/apple/wifi-fw/18G2022/. Look at the path of the file in the command output that ends in .trx . On the website, download that file and rename it to brcmfmac4364-pcie.bin . Do the same for the .clmb file and rename it to brcmfmac4364-pcie.clm_blob . In the end, download the .txt file and rename it to brcmfmac4364-pcie.Apple Inc.-MacBookPro15,1.txt but change the 15,1 in this string to model identifier was the output of the second command described here . Now that you got those 3 files, move them to /lib/firmware/brcm/ . You can now test out if the files work by running sudo modprobe -r brcmfmac && sudo modprobe brcmfmac and looking at the list of wifi access points nearby. To get WPA2 to work stably, install the iwd package (for example sudo apt install iwd on Ubuntu). Edit /etc/NetworkManager/NetworkManager.conf to look like the following: [device] wifi.backend = iwd Set iwd to run on boot with the following commands (assuming that you are using systemd) sudo systemctl enable iwd sudo systemctl start iwd sudo systemctl restart NetworkManager If you wifi disconnects or has issues otherwise its advises to restart iwd: sudo systemctl restart iwd","title":"Wifi"},{"location":"guides/wifi/#introduction","text":"This page is a step by step guide to get wifi working on supported models. Note that currently only Macs that came with macOS Mojave preinstalled are supported, see Device Support and State of Features .","title":"Introduction"},{"location":"guides/wifi/#on-macos","text":"Run both ioreg -l | grep RequestedFiles and system_profiler SPHardwareDataType | grep \"Model Identifier\" in a terminal and note down the output.","title":"On macOS"},{"location":"guides/wifi/#on-linux","text":"Look at the ouput of the first command listed above, it will probably look something like this \"RequestedFiles\" = ( { \"Firmware\" = \"C-4364s-B2/kauai.trx\" , \"TxCap\" = \"C-4364s-B2/kauai-X3.txcb\" , \"Regulatory\" = \"C-4364s-B2/kauai-X3.clmb\" , \"NVRAM\" = \"C-4364s-B2/P-kauai-X3_M-HRPN_V-u__m-7.5.txt\" } ) Navigate to https://packages.aunali1.com/apple/wifi-fw/18G2022/. Look at the path of the file in the command output that ends in .trx . On the website, download that file and rename it to brcmfmac4364-pcie.bin . Do the same for the .clmb file and rename it to brcmfmac4364-pcie.clm_blob . In the end, download the .txt file and rename it to brcmfmac4364-pcie.Apple Inc.-MacBookPro15,1.txt but change the 15,1 in this string to model identifier was the output of the second command described here . Now that you got those 3 files, move them to /lib/firmware/brcm/ . You can now test out if the files work by running sudo modprobe -r brcmfmac && sudo modprobe brcmfmac and looking at the list of wifi access points nearby. To get WPA2 to work stably, install the iwd package (for example sudo apt install iwd on Ubuntu). Edit /etc/NetworkManager/NetworkManager.conf to look like the following: [device] wifi.backend = iwd Set iwd to run on boot with the following commands (assuming that you are using systemd) sudo systemctl enable iwd sudo systemctl start iwd sudo systemctl restart NetworkManager If you wifi disconnects or has issues otherwise its advises to restart iwd: sudo systemctl restart iwd","title":"On Linux"}]}